<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.maxcar.barrier.dao.BarrierCameraMapper" >
  <resultMap id="BaseResultMap" type="com.maxcar.barrier.pojo.BarrierCamera" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="market_id" property="marketId" jdbcType="VARCHAR" />
    <result column="barrier_id" property="barrierId" jdbcType="VARCHAR" />
    <result column="device_ip" property="deviceIp" jdbcType="VARCHAR" />
    <result column="device_port" property="devicePort" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="is_valid" property="isValid" jdbcType="INTEGER" />
    <result column="insert_time" property="insertTime" jdbcType="TIMESTAMP" />
    <result column="insert_operator" property="insertOperator" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_operator" property="updateOperator" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, market_id, barrier_id, device_ip, device_port, user_name, password, is_valid, 
    insert_time, insert_operator, update_time, update_operator, remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.maxcar.barrier.pojo.BarrierCameraExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from barrier_camera
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from barrier_camera
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from barrier_camera
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.maxcar.barrier.pojo.BarrierCamera" >
    insert into barrier_camera (id, market_id, barrier_id, 
      device_ip, device_port, user_name, 
      password, is_valid, insert_time, 
      insert_operator, update_time, update_operator, 
      remark)
    values (#{id,jdbcType=VARCHAR}, #{marketId,jdbcType=VARCHAR}, #{barrierId,jdbcType=VARCHAR}, 
      #{deviceIp,jdbcType=VARCHAR}, #{devicePort,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{isValid,jdbcType=INTEGER}, #{insertTime,jdbcType=TIMESTAMP}, 
      #{insertOperator,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateOperator,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.maxcar.barrier.pojo.BarrierCamera" >
    insert into barrier_camera
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="marketId != null" >
        market_id,
      </if>
      <if test="barrierId != null" >
        barrier_id,
      </if>
      <if test="deviceIp != null" >
        device_ip,
      </if>
      <if test="devicePort != null" >
        device_port,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="isValid != null" >
        is_valid,
      </if>
      <if test="insertTime != null" >
        insert_time,
      </if>
      <if test="insertOperator != null" >
        insert_operator,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateOperator != null" >
        update_operator,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="marketId != null" >
        #{marketId,jdbcType=VARCHAR},
      </if>
      <if test="barrierId != null" >
        #{barrierId,jdbcType=VARCHAR},
      </if>
      <if test="deviceIp != null" >
        #{deviceIp,jdbcType=VARCHAR},
      </if>
      <if test="devicePort != null" >
        #{devicePort,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null" >
        #{isValid,jdbcType=INTEGER},
      </if>
      <if test="insertTime != null" >
        #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="insertOperator != null" >
        #{insertOperator,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateOperator != null" >
        #{updateOperator,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.maxcar.barrier.pojo.BarrierCameraExample" resultType="java.lang.Integer" >
    select count(*) from barrier_camera
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update barrier_camera
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.marketId != null" >
        market_id = #{record.marketId,jdbcType=VARCHAR},
      </if>
      <if test="record.barrierId != null" >
        barrier_id = #{record.barrierId,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceIp != null" >
        device_ip = #{record.deviceIp,jdbcType=VARCHAR},
      </if>
      <if test="record.devicePort != null" >
        device_port = #{record.devicePort,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.isValid != null" >
        is_valid = #{record.isValid,jdbcType=INTEGER},
      </if>
      <if test="record.insertTime != null" >
        insert_time = #{record.insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.insertOperator != null" >
        insert_operator = #{record.insertOperator,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateOperator != null" >
        update_operator = #{record.updateOperator,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update barrier_camera
    set id = #{record.id,jdbcType=VARCHAR},
      market_id = #{record.marketId,jdbcType=VARCHAR},
      barrier_id = #{record.barrierId,jdbcType=VARCHAR},
      device_ip = #{record.deviceIp,jdbcType=VARCHAR},
      device_port = #{record.devicePort,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      is_valid = #{record.isValid,jdbcType=INTEGER},
      insert_time = #{record.insertTime,jdbcType=TIMESTAMP},
      insert_operator = #{record.insertOperator,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_operator = #{record.updateOperator,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.maxcar.barrier.pojo.BarrierCamera" >
    update barrier_camera
    <set >
      <if test="marketId != null" >
        market_id = #{marketId,jdbcType=VARCHAR},
      </if>
      <if test="barrierId != null" >
        barrier_id = #{barrierId,jdbcType=VARCHAR},
      </if>
      <if test="deviceIp != null" >
        device_ip = #{deviceIp,jdbcType=VARCHAR},
      </if>
      <if test="devicePort != null" >
        device_port = #{devicePort,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null" >
        is_valid = #{isValid,jdbcType=INTEGER},
      </if>
      <if test="insertTime != null" >
        insert_time = #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="insertOperator != null" >
        insert_operator = #{insertOperator,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateOperator != null" >
        update_operator = #{updateOperator,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.maxcar.barrier.pojo.BarrierCamera" >
    update barrier_camera
    set market_id = #{marketId,jdbcType=VARCHAR},
      barrier_id = #{barrierId,jdbcType=VARCHAR},
      device_ip = #{deviceIp,jdbcType=VARCHAR},
      device_port = #{devicePort,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      is_valid = #{isValid,jdbcType=INTEGER},
      insert_time = #{insertTime,jdbcType=TIMESTAMP},
      insert_operator = #{insertOperator,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_operator = #{updateOperator,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>