<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.maxcar</groupId>
    <artifactId>market-barrier-api</artifactId>
    <packaging>jar</packaging>
    <version>0.0.1-SNAPSHOT</version>

    <name>market-barrier-api</name>
    <description>本地端接口</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.1.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- dom4j.version -->
        <dom4j.version>1.6.1</dom4j.version>
        <!--junit.version -->
        <junit.version>4.12</junit.version>
        <!--jedis.version -->
        <jedis.version>2.9.0</jedis.version>
        <!--jackson.version-->
        <jackson.version>2.9.0</jackson.version>
        <druid.version>1.0.11</druid.version>
        <!--<mysql.version>5.0.8</mysql.version>-->
        <slf4j-api.version>1.7.12</slf4j-api.version>
        <!-- commons-httpclient.version -->
        <commons-httpclient.version>3.1</commons-httpclient.version>
        <!-- commons-collections.version -->
        <commons-collections.version>3.2.2</commons-collections.version>
        <!-- commons-lang3.version -->
        <commons-lang3.version>3.3.2</commons-lang3.version>
        <!--commons-beanutils.version -->
        <commons-beanutils.version>1.9.2</commons-beanutils.version>
        <!--commons-codec.version -->
        <commons-codec.version>1.9</commons-codec.version>
        <!--commons-fileupload.version -->
        <commons-fileupload.version>1.3.2</commons-fileupload.version>
        <!-- commons-lang.version -->
        <commons-lang.version>2.6</commons-lang.version>
        <!-- commons-pool.version -->
        <commons-pool.version>1.6</commons-pool.version>
        <!-- commons-dbcp.version -->
        <commons-dbcp.version>1.4</commons-dbcp.version>
        <!-- commons-io.version -->
        <commons-io.version>2.5</commons-io.version>
        <!-- commons-logging.version -->
        <commons-logging.version>1.2</commons-logging.version>
        <springboot-version>2.0.1.RELEASE</springboot-version>
        <springboot-dubbo-version>1.0.0</springboot-dubbo-version>
        <kafka-version>1.3.2.RELEASE</kafka-version>
    </properties>

    <!--仓库地址-->
    <repositories>
        <repository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>public</id>
            <name>public</name>
            <url>http://nexus.maxcar.com.cn/nexus/content/groups/public/</url>
        </repository>
    </repositories>
    <!-- 加载的是maven生命周期插件的jar包 -->
    <pluginRepositories>
        <pluginRepository>
            <releases>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>public</id>
            <name>public</name>
            <url>http://nexus.maxcar.com.cn/nexus/content/groups/public/</url>
        </pluginRepository>
    </pluginRepositories>

    <!-- 配置部署的远程仓库 -->
    <distributionManagement>
        <!-- 正式版方式 -->
        <repository>
            <id>releases</id>
            <name>Nexus Release Repository</name>
            <url>http://nexus.maxcar.com.cn/nexus/content/repositories/release/</url>
        </repository>
        <!-- 快照版方式 -->
        <snapshotRepository>
            <id>snapshots</id>
            <name>Nexus Snapshot Repository</name>
            <url>http://nexus.maxcar.com.cn/nexus/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

    <dependencies>
        <!--引入spring启动，排除log4j依赖-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.hibernate.validator</groupId>
                    <artifactId>hibernate-validator</artifactId>
                </exclusion>
            </exclusions>
        </dependency>


        <dependency>
            <groupId>com.aliyun.mns</groupId>
            <artifactId>aliyun-sdk-mns</artifactId>
            <version>1.1.8.4</version>
        </dependency>
        <dependency>
            <groupId>com.aliyun</groupId>
            <artifactId>aliyun-java-sdk-core</artifactId>
            <version>3.3.1</version>
        </dependency>
        <dependency>
            <groupId>com.aliyun</groupId>
            <artifactId>aliyun-java-sdk-dysmsapi</artifactId>
            <version>1.1.0</version>
        </dependency>


        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>5.1.0.Final</version>
        </dependency>
        <!-- validation -->
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>1.1.0.Final</version>
        </dependency>

        <!-- 使用log4j2管理日志 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
            <version>2.0.1.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javassist</groupId>
            <artifactId>javassist</artifactId>
            <version>3.12.0.GA</version>
        </dependency>
        <!-- Dubbox -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>dubbo</artifactId>
            <version>2.8.4</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.apache.zookeeper</groupId>
            <artifactId>zookeeper</artifactId>
            <version>3.4.6</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>log4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>com.github.sgroschupf</groupId>
            <artifactId>zkclient</artifactId>
            <version>0.1</version>
        </dependency>

        <!--指定序列化配置-->
        <dependency>
            <groupId>com.esotericsoftware.kryo</groupId>
            <artifactId>kryo</artifactId>
            <version>2.24.0</version>
        </dependency>
        <dependency>
            <groupId>de.javakaffee</groupId>
            <artifactId>kryo-serializers</artifactId>
            <version>0.26</version>
        </dependency>
        <dependency>
            <groupId>de.ruedigermoeller</groupId>
            <artifactId>fst</artifactId>
            <version>1.55</version>
        </dependency>

        <!--引入内置tomcat服务-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <!--<scope>provided</scope>-->
            <!--开启后tomcat无法运行-->
        </dependency>

        <dependency>
            <groupId>dom4j</groupId>
            <artifactId>dom4j</artifactId>
            <version>${dom4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j-api.version}</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
        </dependency>

        <!-- Jackson Json处理工具包 -->

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/commons-httpclient/commons-httpclient -->
        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
            <version>${commons-httpclient.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/commons-beanutils/commons-beanutils -->
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>${commons-beanutils.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/commons-collections/commons-collections -->
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>${commons-collections.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/commons-codec/commons-codec -->
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>${commons-codec.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload -->
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>${commons-fileupload.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/commons-lang/commons-lang -->
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>${commons-lang.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/commons-pool/commons-pool -->
        <dependency>
            <groupId>commons-pool</groupId>
            <artifactId>commons-pool</artifactId>
            <version>${commons-pool.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/commons-dbcp/commons-dbcp -->
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>${commons-dbcp.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/commons-logging/commons-logging -->
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>${commons-logging.version}</version>
        </dependency>
        <!--全局异常处理，json格式-->
        <!-- https://mvnrepository.com/artifact/com.minlia.cloud/minlia-cloud-common -->
        <dependency>
            <groupId>com.minlia.cloud</groupId>
            <artifactId>minlia-cloud-common</artifactId>
            <version>1.0.2.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>com.maxcar</groupId>
            <artifactId>market-util</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>
        <!--kafka相关api-->
        <!-- https://mvnrepository.com/artifact/org.springframework.kafka/spring-kafka -->
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
            <version>${kafka-version}</version>
        </dependency>
        <!--mqtt道闸使用-->
        <dependency>
            <groupId>org.eclipse.paho</groupId>
            <artifactId>org.eclipse.paho.client.mqttv3</artifactId>
            <version>1.2.0</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jna</groupId>
            <artifactId>jna</artifactId>
            <version>1.0</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jna.examples</groupId>
            <artifactId>examples</artifactId>
            <version>1.0</version>
        </dependency>
    </dependencies>


    <!-- 申明不同环境调用不同数据库连接参数 -->
    <profiles>
        <!-- 开发，默认激活 -->
        <profile>
            <properties>
                <!--开发环境端口配置-->
                <spring.profiles.active>dev</spring.profiles.active>
                <market.jdbc.url>jdbc:mysql://192.168.3.58:3306/maxcar?useSSL=false</market.jdbc.url>
                <market.jdbc.username>root</market.jdbc.username>
                <market.jdbc.password>Maxcar#2018d</market.jdbc.password>
                <!-- datasource通用-->
                <system.jdbc.prototypeCount>10</system.jdbc.prototypeCount>
                <system.jdbc.maximumConnectionCount>50</system.jdbc.maximumConnectionCount>
                <system.jdbc.minimumConnectionCount>10</system.jdbc.minimumConnectionCount>
                <system.jdbc.houseKeepingTestSql>SELECT 'x'</system.jdbc.houseKeepingTestSql>
                <!--卡夫卡-->
                <!--<kafka.consumer.zookeeper.connect>192.168.3.45:2181,192.168.3.50:2181,192.168.3.51:2181</kafka.consumer.zookeeper.connect>
                <kafka.consumer.servers>192.168.3.50:9092,192.168.3.51:9092</kafka.consumer.servers>
                <kafka.producer.servers>192.168.3.50:9092,192.168.3.51:9092</kafka.producer.servers>-->
                <kafka.consumer.zookeeper.connect>47.99.144.182:2181</kafka.consumer.zookeeper.connect>
                <kafka.consumer.servers>47.99.144.182:9092</kafka.consumer.servers>
                <kafka.producer.servers>47.99.144.182:9092</kafka.producer.servers>
                <kafka.producer.topic>sync_upload_data_dev</kafka.producer.topic>
                <kafka.producer.parking.topic>sync_upload_data_parking_dev</kafka.producer.parking.topic>
                <kafka.consumer.topic006>sync_download_006_data_dev</kafka.consumer.topic006>
                <kafka.consumer.topic007>sync_download_007_data_dev</kafka.consumer.topic007>
                <kafka.consumer.topic008>sync_download_008_data_dev</kafka.consumer.topic008>
                <kafka.consumer.topic010>sync_download_010_data_dev</kafka.consumer.topic010>
                <local.servers.address>http://localhost:8082</local.servers.address>
                <kafka.consumer.group.id>sync_upload_data</kafka.consumer.group.id>
                <!--mqtt-->
                <mqtt.server.host>tcp://192.168.3.59:1883</mqtt.server.host>
                <mqtt.push.topic>MQTT_YL_UP_DEV</mqtt.push.topic>
                <mqtt.server.username>admin</mqtt.server.username>
                <mqtt.server.password>password</mqtt.server.password>
            </properties>
            <id>dev</id>
            <activation><!-- 默认激活 -->
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <!--公司-->
        <profile>
            <id>test</id>
            <properties>
                <!--开发环境端口配置-->
                <spring.profiles.active>test</spring.profiles.active>
                <market.jdbc.url>jdbc:mysql://mysql-t.maxcar.com.cn:3306/maxcar?characterEncoding=utf-8</market.jdbc.url>
                <market.jdbc.username>root</market.jdbc.username>
                <market.jdbc.password>Maxcar#2017</market.jdbc.password>


                <!-- datasource通用-->
                <system.jdbc.prototypeCount>10</system.jdbc.prototypeCount>
                <system.jdbc.maximumConnectionCount>50</system.jdbc.maximumConnectionCount>
                <system.jdbc.minimumConnectionCount>10</system.jdbc.minimumConnectionCount>
                <system.jdbc.houseKeepingTestSql>SELECT 'x'</system.jdbc.houseKeepingTestSql>
                <!--卡夫卡-->
                <kafka.consumer.zookeeper.connect>192.168.3.60:3001,192.168.3.60:3002,192.168.3.60:3003</kafka.consumer.zookeeper.connect>
                <kafka.consumer.servers>192.168.3.50:9092,192.168.3.51:9092</kafka.consumer.servers>
                <kafka.producer.servers>192.168.3.50:9092,192.168.3.51:9092</kafka.producer.servers>

                <!--<kafka.consumer.zookeeper.connect>47.99.169.206:2181</kafka.consumer.zookeeper.connect>
                <kafka.consumer.servers>47.99.169.206:9092</kafka.consumer.servers>
                <kafka.producer.servers>47.99.169.206:9092</kafka.producer.servers>-->

                <kafka.producer.topic>sync_upload_data_test</kafka.producer.topic>
                <kafka.producer.parking.topic>sync_upload_data_parking_test</kafka.producer.parking.topic>
                <kafka.consumer.topic006>sync_download_006_data_test</kafka.consumer.topic006>
                <kafka.consumer.topic007>sync_download_007_data_test</kafka.consumer.topic007>
                <kafka.consumer.topic008>sync_download_008_data_test</kafka.consumer.topic008>
                <kafka.consumer.topic010>sync_download_010_data_test</kafka.consumer.topic010>
                <local.servers.address>http://dz-t.maxcar.com.cn</local.servers.address>
                <kafka.consumer.group.id>sync_upload_data</kafka.consumer.group.id>
                <!--mqtt-->
                <mqtt.server.host>tcp://192.168.3.59:1883</mqtt.server.host>
                <mqtt.push.topic>MQTT_YL_UP</mqtt.push.topic>
                <mqtt.server.username>admin</mqtt.server.username>
                <mqtt.server.password>password</mqtt.server.password>
            </properties>
            <activation><!-- 默认激活 -->
                <activeByDefault>false</activeByDefault>
            </activation>
        </profile>
        <!-- 测试环境，默认不激活 -->
        <profile>
            <id>pro</id>
            <properties>
                <!--开发环境端口配置-->
                <spring.profiles.active>pro</spring.profiles.active>
                <market.jdbc.url>jdbc:mysql://localhost:3306/maxcar?characterEncoding=utf-8</market.jdbc.url>
                <market.jdbc.username>root</market.jdbc.username>
                <market.jdbc.password>qcxc1234</market.jdbc.password>
                <!-- datasource通用-->
                <system.jdbc.prototypeCount>10</system.jdbc.prototypeCount>
                <system.jdbc.maximumConnectionCount>50</system.jdbc.maximumConnectionCount>
                <system.jdbc.minimumConnectionCount>10</system.jdbc.minimumConnectionCount>
                <system.jdbc.houseKeepingTestSql>SELECT 'x'</system.jdbc.houseKeepingTestSql>
                <!--卡夫卡-->
                <kafka.consumer.zookeeper.connect>172.16.110.107:3001,172.16.110.106:3003,172.16.110.99:3002</kafka.consumer.zookeeper.connect>
                <kafka.consumer.servers>47.96.29.224:9092,116.62.20.142:9092</kafka.consumer.servers>
                <kafka.producer.servers>47.96.29.224:9092,116.62.20.142:9092</kafka.producer.servers>
                <kafka.producer.topic>sync_upload_data_pro</kafka.producer.topic>
                <kafka.producer.parking.topic>sync_upload_data_parking_pro</kafka.producer.parking.topic>
                <kafka.consumer.topic006>sync_download_006_data_pro</kafka.consumer.topic006>
                <kafka.consumer.topic007>sync_download_007_data_pro</kafka.consumer.topic007>
                <kafka.consumer.topic008>sync_download_008_data_pro</kafka.consumer.topic008>
                <kafka.consumer.topic010>sync_download_010_data_pro</kafka.consumer.topic010>
                <local.servers.address>http://localhost:9090</local.servers.address>
                <kafka.consumer.group.id>sync_upload_data</kafka.consumer.group.id>
                <!--mqtt-->
                <mqtt.server.host>tcp://192.168.7.130:1883</mqtt.server.host>
                <mqtt.push.topic>MQTT_YL_UP</mqtt.push.topic>
                <mqtt.server.username>admin</mqtt.server.username>
                <mqtt.server.password>password</mqtt.server.password>
            </properties>
            <activation><!-- 默认激活 -->
                <activeByDefault>false</activeByDefault>
            </activation>
        </profile>
    </profiles>


    <build>
        <finalName>market-barrier-api</finalName>
        <plugins>
            <!--生成可执行jar-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--使用IDEA时，导入的Maven项目默认的LanguageLevel和JavaCompiler都是1.5，1.5的情况下连最简单的@Override注解都不支持，所以项目可能出现一堆错。-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
        </plugins>
        <!--资源过滤-->
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                </includes>
                <filtering>false</filtering>
            </resource>

            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                    <include>**/application.yml</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>
</project>
