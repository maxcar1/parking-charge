<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.maxcar.user.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.maxcar.user.entity.User" >
    <id column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="true_name" property="trueName" jdbcType="VARCHAR" />
    <result column="market_id" property="marketId" jdbcType="VARCHAR" />
    <result column="org_id" property="orgId" jdbcType="VARCHAR" />
    <result column="staff_id" property="staffId" jdbcType="VARCHAR" />
    <result column="user_pwd" property="userPwd" jdbcType="VARCHAR" />
    <result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
    <result column="user_email" property="userEmail" jdbcType="VARCHAR" />
    <result column="manager_flag" property="managerFlag" jdbcType="SMALLINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="last_login_ip" property="lastLoginIp" jdbcType="VARCHAR" />
    <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP" />
    <result column="isvalid" property="isvalid" jdbcType="INTEGER" />
    <result column="version" property="version" jdbcType="INTEGER" />
    <result column="register_time" property="registerTime" jdbcType="TIMESTAMP" />
    <result column="ind" property="ind" jdbcType="INTEGER" />
    <result column="user_code" property="userCode" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_id, user_name, true_name, market_id, org_id, staff_id, user_pwd, user_phone,
    user_email, manager_flag, remark, last_login_ip, last_login_time, isvalid, version,
    register_time, ind, user_code
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.maxcar.user.entity.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.maxcar.user.entity.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.maxcar.user.entity.User" >
    insert into user (user_id, user_name, true_name,
      market_id, org_id, staff_id,
      user_pwd, user_phone, user_email,
      manager_flag, remark, last_login_ip,
      last_login_time, isvalid, version,
      register_time, ind, user_code
      )
    values (#{userId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{trueName,jdbcType=VARCHAR},
      #{marketId,jdbcType=VARCHAR}, #{orgId,jdbcType=VARCHAR}, #{staffId,jdbcType=VARCHAR},
      #{userPwd,jdbcType=VARCHAR}, #{userPhone,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR},
      #{managerFlag,jdbcType=SMALLINT}, #{remark,jdbcType=VARCHAR}, #{lastLoginIp,jdbcType=VARCHAR},
      #{lastLoginTime,jdbcType=TIMESTAMP}, #{isvalid,jdbcType=INTEGER}, #{version,jdbcType=INTEGER},
      #{registerTime,jdbcType=TIMESTAMP}, #{ind,jdbcType=INTEGER}, #{userCode,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.maxcar.user.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="trueName != null" >
        true_name,
      </if>
      <if test="marketId != null" >
        market_id,
      </if>
      <if test="orgId != null" >
        org_id,
      </if>
      <if test="staffId != null" >
        staff_id,
      </if>
      <if test="userPwd != null" >
        user_pwd,
      </if>
      <if test="userPhone != null" >
        user_phone,
      </if>
      <if test="userEmail != null" >
        user_email,
      </if>
      <if test="managerFlag != null" >
        manager_flag,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="lastLoginIp != null" >
        last_login_ip,
      </if>
      <if test="lastLoginTime != null" >
        last_login_time,
      </if>
      <if test="isvalid != null" >
        isvalid,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="registerTime != null" >
        register_time,
      </if>
      <if test="ind != null" >
        ind,
      </if>
      <if test="userCode != null" >
        user_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="trueName != null" >
        #{trueName,jdbcType=VARCHAR},
      </if>
      <if test="marketId != null" >
        #{marketId,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null" >
        #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="staffId != null" >
        #{staffId,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null" >
        #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null" >
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null" >
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="managerFlag != null" >
        #{managerFlag,jdbcType=SMALLINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginIp != null" >
        #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null" >
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isvalid != null" >
        #{isvalid,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
      <if test="registerTime != null" >
        #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ind != null" >
        #{ind,jdbcType=INTEGER},
      </if>
      <if test="userCode != null" >
        #{userCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.maxcar.user.entity.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.trueName != null" >
        true_name = #{record.trueName,jdbcType=VARCHAR},
      </if>
      <if test="record.marketId != null" >
        market_id = #{record.marketId,jdbcType=VARCHAR},
      </if>
      <if test="record.orgId != null" >
        org_id = #{record.orgId,jdbcType=VARCHAR},
      </if>
      <if test="record.staffId != null" >
        staff_id = #{record.staffId,jdbcType=VARCHAR},
      </if>
      <if test="record.userPwd != null" >
        user_pwd = #{record.userPwd,jdbcType=VARCHAR},
      </if>
      <if test="record.userPhone != null" >
        user_phone = #{record.userPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.userEmail != null" >
        user_email = #{record.userEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.managerFlag != null" >
        manager_flag = #{record.managerFlag,jdbcType=SMALLINT},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.lastLoginIp != null" >
        last_login_ip = #{record.lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="record.lastLoginTime != null" >
        last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isvalid != null" >
        isvalid = #{record.isvalid,jdbcType=INTEGER},
      </if>
      <if test="record.version != null" >
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.registerTime != null" >
        register_time = #{record.registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ind != null" >
        ind = #{record.ind,jdbcType=INTEGER},
      </if>
      <if test="record.userCode != null" >
        user_code = #{record.userCode,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set user_id = #{record.userId,jdbcType=VARCHAR},
    user_name = #{record.userName,jdbcType=VARCHAR},
    true_name = #{record.trueName,jdbcType=VARCHAR},
    market_id = #{record.marketId,jdbcType=VARCHAR},
    org_id = #{record.orgId,jdbcType=VARCHAR},
    staff_id = #{record.staffId,jdbcType=VARCHAR},
    user_pwd = #{record.userPwd,jdbcType=VARCHAR},
    user_phone = #{record.userPhone,jdbcType=VARCHAR},
    user_email = #{record.userEmail,jdbcType=VARCHAR},
    manager_flag = #{record.managerFlag,jdbcType=SMALLINT},
    remark = #{record.remark,jdbcType=VARCHAR},
    last_login_ip = #{record.lastLoginIp,jdbcType=VARCHAR},
    last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
    isvalid = #{record.isvalid,jdbcType=INTEGER},
    version = #{record.version,jdbcType=INTEGER},
    register_time = #{record.registerTime,jdbcType=TIMESTAMP},
    ind = #{record.ind,jdbcType=INTEGER},
    user_code = #{record.userCode,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.maxcar.user.entity.User" >
    update user
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="trueName != null" >
        true_name = #{trueName,jdbcType=VARCHAR},
      </if>
      <if test="marketId != null" >
        market_id = #{marketId,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null" >
        org_id = #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="staffId != null" >
        staff_id = #{staffId,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null" >
        user_pwd = #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null" >
        user_phone = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null" >
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="managerFlag != null" >
        manager_flag = #{managerFlag,jdbcType=SMALLINT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginIp != null" >
        last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null" >
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isvalid != null" >
        isvalid = #{isvalid,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="registerTime != null" >
        register_time = #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ind != null" >
        ind = #{ind,jdbcType=INTEGER},
      </if>
      <if test="userCode != null" >
        user_code = #{userCode,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.maxcar.user.entity.User" >
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      true_name = #{trueName,jdbcType=VARCHAR},
      market_id = #{marketId,jdbcType=VARCHAR},
      org_id = #{orgId,jdbcType=VARCHAR},
      staff_id = #{staffId,jdbcType=VARCHAR},
      user_pwd = #{userPwd,jdbcType=VARCHAR},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      manager_flag = #{managerFlag,jdbcType=SMALLINT},
      remark = #{remark,jdbcType=VARCHAR},
      last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      isvalid = #{isvalid,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      register_time = #{registerTime,jdbcType=TIMESTAMP},
      ind = #{ind,jdbcType=INTEGER},
      user_code = #{userCode,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>

   <!-- 单表数据批量同步更新 -->
   <update id="batchUserSync" parameterType="java.util.List" flushCache="true" >
       insert into user (id,username,password,employee,role,status,version,insert_time,update_time) values
      <foreach collection="list" item="item" index="index" separator=",">  
       (#{item.id},#{item.username},#{item.password},#{item.employee},#{item.role},#{item.status},#{item.version},#{item.insert_time},#{item.update_time})
      </foreach> 
       ON DUPLICATE KEY UPDATE
       username = values(username),password=values(password),employee = values(employee),role = values(role),status=values(status),
       version = values(version),insert_time=values(insert_time),update_time=values(update_time)
    </update>  
    
     
    <update id="batchUserSyncKafka" parameterType="java.util.List" flushCache="true">
      insert into user (id, username, password, 
      employee, role, status, 
      version, insert_time, update_time) 
      values 
     <foreach collection="list" item="item" index="index" separator=",">  
        (
        #{item.id,jdbcType=VARCHAR},#{item.username,jdbcType=VARCHAR},#{item.password,jdbcType=VARCHAR},
        #{item.employee,jdbcType=VARCHAR},#{item.role,jdbcType=VARCHAR},#{item.status,jdbcType=INTEGER},
        #{item.version,jdbcType=INTEGER},
        #{item.insertTime,jdbcType=TIMESTAMP},#{item.updateTime,jdbcType=TIMESTAMP}
        )
     </foreach>
     ON DUPLICATE KEY UPDATE
        username = values(username),password = values(password),employee=values(employee), 
        role=values(role), status=values(status),version=values(version),
         insert_time=values(insert_time),update_time=values(update_time)
  </update>
</mapper>