<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.maxcar.user.dao.RoleResourceMapper" >
  <resultMap id="BaseResultMap" type="com.maxcar.user.entity.RoleResource" >
    <id column="role_permissions_id" property="rolePermissionsId" jdbcType="VARCHAR" />
    <result column="role_id" property="roleId" jdbcType="VARCHAR" />
    <result column="resource_id" property="resourceId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    role_permissions_id, role_id, resource_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.maxcar.user.entity.RoleResourceExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from role_resource
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from role_resource
    where role_permissions_id = #{rolePermissionsId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from role_resource
    where role_permissions_id = #{rolePermissionsId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.maxcar.user.entity.RoleResourceExample" >
    delete from role_resource
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.maxcar.user.entity.RoleResource" >
    insert into role_resource (role_permissions_id, role_id, resource_id
      )
    values (#{rolePermissionsId,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR}, #{resourceId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.maxcar.user.entity.RoleResource" >
    insert into role_resource
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="rolePermissionsId != null" >
        role_permissions_id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="resourceId != null" >
        resource_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="rolePermissionsId != null" >
        #{rolePermissionsId,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="resourceId != null" >
        #{resourceId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.maxcar.user.entity.RoleResourceExample" resultType="java.lang.Integer" >
    select count(*) from role_resource
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update role_resource
    <set >
      <if test="record.rolePermissionsId != null" >
        role_permissions_id = #{record.rolePermissionsId,jdbcType=VARCHAR},
      </if>
      <if test="record.roleId != null" >
        role_id = #{record.roleId,jdbcType=VARCHAR},
      </if>
      <if test="record.resourceId != null" >
        resource_id = #{record.resourceId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update role_resource
    set role_permissions_id = #{record.rolePermissionsId,jdbcType=VARCHAR},
      role_id = #{record.roleId,jdbcType=VARCHAR},
      resource_id = #{record.resourceId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.maxcar.user.entity.RoleResource" >
    update role_resource
    <set >
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="resourceId != null" >
        resource_id = #{resourceId,jdbcType=VARCHAR},
      </if>
    </set>
    where role_permissions_id = #{rolePermissionsId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.maxcar.user.entity.RoleResource" >
    update role_resource
    set role_id = #{roleId,jdbcType=VARCHAR},
      resource_id = #{resourceId,jdbcType=VARCHAR}
    where role_permissions_id = #{rolePermissionsId,jdbcType=VARCHAR}
  </update>
  <select id="findMenuByUserId" parameterType="Map" resultType="com.maxcar.user.entity.Resource">
    select resource_id as resourceId,resource_name as resourceName,resource_url as resourceUrl
    ,parent_id as parentId,ind,resource_Level as resourceLevel
    ,true as checked  from resource rr
    where
    exists
    (
    select tr.resource_id from role_resource tr,role r,user_role tur where tur.user_id=#{userId,jdbcType=VARCHAR}
    <if test="parentId !=null">
      and parent_id = #{parentId,jdbcType=VARCHAR}
    </if>
    and tr.role_id=r.role_id and tur.role_id=r.role_id and rr.resource_id=tr.resource_id
    ) and resource_type=0
    <if test="level !=null">
      and resource_Level=#{level,jdbcType=VARCHAR}
    </if>
    <if test="ifAll">
      union
      select resource_id as resourceId,resource_name as resourceName,resource_url as resourceUrl
      ,parent_id as parentId,ind,resource_Level as resourceLevel
      ,false as checked  from resource rr
      where
      not exists
      (
      select tr.resource_id from role_resource tr,role r,user_role tur where tur.user_id=#{userId,jdbcType=VARCHAR}
      and tr.role_id=r.role_id and tur.role_id=r.role_id and  rr.resource_id=tr.resource_id
      ) and resource_type=0
      <if test="level !=null">
        and resource_Level=#{level,jdbcType=VARCHAR}
      </if>
    </if>
    ORDER BY ind ,resourceLevel asc
  </select>


  <select id="findMenuByRoleId" parameterType="Map" resultType="com.maxcar.user.entity.Resource">
    select
    aaa.*,
    (case (select count(1)  from role_resource temp where temp.role_id = #{roleId,jdbcType=VARCHAR} and temp.resource_id=aaa.resourceId) when 0 then false else true end ) as checked
    from (
      SELECT
      resource_id AS resourceId,
      resource_name AS resourceName,
      resource_url AS resourceUrl,
      parent_id AS parentId,
      ind,
      resource_Level AS resourceLevel
      FROM
      resource rr
      WHERE
      EXISTS (
        SELECT
        tr.resource_id
        FROM
        role_resource tr
        WHERE
        tr.role_id = #{parentRoleId,jdbcType=VARCHAR}
        AND rr.resource_id = tr.resource_id
      )
    AND resource_type = 0
    <if test="parentId !=null">
      and parent_id=#{parentId,jdbcType=VARCHAR}
    </if>
    <if test="level !=null">
      and resource_Level=#{level,jdbcType=VARCHAR}
    </if>
  ) aaa
  <!--select resource_id as resourceId,resource_name as resourceName,resource_url as resourceUrl-->
    <!--,parent_id as parentId,ind,resource_Level as resourceLevel-->
    <!--,true as checked  from resource rr-->
    <!--where-->
    <!--exists-->
    <!--(-->
    <!--select tr.resource_id from role_resource tr where tr.role_id=#{roleId,jdbcType=VARCHAR}-->
    <!--and rr.resource_id=tr.resource_id-->
    <!--<if test="parentId !=null">-->
      <!--and parent_id=#{parentId,jdbcType=VARCHAR}-->
    <!--</if>-->
    <!--) and resource_type=0-->
    <!--<if test="level !=null">-->
      <!--and resource_Level=#{level,jdbcType=VARCHAR}-->
    <!--</if>-->
    <!--<if test="ifAll">-->
      <!--union-->
      <!--select resource_id as resourceId,resource_name as resourceName,resource_url as resourceUrl-->
      <!--,parent_id as parentId,ind,resource_Level as resourceLevel-->
      <!--,false as checked  from resource rr-->
      <!--where-->
      <!--exists-->
      <!--(-->
      <!--select tr.resource_id from role_resource tr where tr.role_id=#{parentRoleId,jdbcType=VARCHAR}-->
      <!--and rr.resource_id=tr.resource_id-->
      <!--<if test="parentId !=null">-->
        <!--and parent_id=#{parentId,jdbcType=VARCHAR}-->
      <!--</if>-->
      <!--) and resource_type=0-->
      <!--<if test="level !=null">-->
        <!--and resource_Level=#{level,jdbcType=VARCHAR}-->
      <!--</if>-->
    <!--</if>-->
  </select>
</mapper>