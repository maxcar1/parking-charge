<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.maxcar.market.dao.PropertyContractPayDetailMapper">
    <resultMap id="BaseResultMap" type="com.maxcar.market.pojo.PropertyContractPayDetail">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="market_id" property="marketId" jdbcType="VARCHAR"/>
        <result column="property_contract_id" property="propertyContractId" jdbcType="VARCHAR"/>
        <result column="property_contract_detail" property="propertyContractDetail" jdbcType="VARCHAR"/>
        <result column="pay_time" property="payTime" jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="pay_price" property="payPrice" jdbcType="DECIMAL"/>
        <result column="isvalid" property="isvalid" jdbcType="INTEGER"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="insert_time" property="insertTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="insert_operator" property="insertOperator" jdbcType="VARCHAR"/>
        <result column="update_operator" property="updateOperator" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <!-- 查看合同缴费记录列表  -->
    <select id="getAll" resultMap="BaseResultMap"
            parameterType="com.maxcar.market.model.request.GetAllPayDetailRequest">
        SELECT
        <include refid="Base_Column_List"/>
        from property_contract_pay_detail
        where isvalid = 1
        <if test="propertyContractDetailId != null">
            and property_contract_detail = #{propertyContractDetailId}
        </if>
        <if test="propertyContractId != null">
            and property_contract_id = #{propertyContractId}
        </if>
        <if test="payDetailStatus == 0  ">
            <!-- 查询需要缴费的记录 -->
            <![CDATA[   and `status`in (0,1) ]]>
        </if>
        <if test="payDetailStatus == 1 ">
            <!--  查询缴费过的记录-->
            <![CDATA[   and `status`in (1,2) ]]>
        </if>
        ORDER by insert_time desc
    </select>


    <sql id="Base_Column_List">
    id, market_id, property_contract_id, property_contract_detail, pay_time, status,
    pay_price, isvalid, remark, insert_time, update_time, insert_operator, update_operator
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.maxcar.market.pojo.PropertyContractPayDetailExample">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from property_contract_pay_detail
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from property_contract_pay_detail
        where id = #{id,jdbcType=VARCHAR} and isvalid = 1
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from property_contract_pay_detail
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.maxcar.market.pojo.PropertyContractPayDetailExample">
        delete from property_contract_pay_detail
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.maxcar.market.pojo.PropertyContractPayDetail">
    insert into property_contract_pay_detail (id, market_id, property_contract_id,
      property_contract_detail, pay_time, status,
      pay_price, isvalid, remark,
      insert_time, update_time, insert_operator,
      update_operator)
    values (#{id,jdbcType=VARCHAR}, #{marketId,jdbcType=VARCHAR}, #{propertyContractId,jdbcType=VARCHAR},
      #{propertyContractDetail,jdbcType=VARCHAR}, #{payTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER},
      #{payPrice,jdbcType=INTEGER}, #{isvalid,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR},
      #{insertTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{insertOperator,jdbcType=VARCHAR},
      #{updateOperator,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.maxcar.market.pojo.PropertyContractPayDetail">
        insert into property_contract_pay_detail
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="marketId != null">
                market_id,
            </if>
            <if test="propertyContractId != null">
                property_contract_id,
            </if>
            <if test="propertyContractDetail != null">
                property_contract_detail,
            </if>
            <if test="payTime != null">
                pay_time,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="payPrice != null">
                pay_price,
            </if>
            <if test="isvalid != null">
                isvalid,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="insertTime != null">
                insert_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="insertOperator != null">
                insert_operator,
            </if>
            <if test="updateOperator != null">
                update_operator,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="marketId != null">
                #{marketId,jdbcType=VARCHAR},
            </if>
            <if test="propertyContractId != null">
                #{propertyContractId,jdbcType=VARCHAR},
            </if>
            <if test="propertyContractDetail != null">
                #{propertyContractDetail,jdbcType=VARCHAR},
            </if>
            <if test="payTime != null">
                #{payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="payPrice != null">
                #{payPrice,jdbcType=INTEGER},
            </if>
            <if test="isvalid != null">
                #{isvalid,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="insertTime != null">
                #{insertTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="insertOperator != null">
                #{insertOperator,jdbcType=VARCHAR},
            </if>
            <if test="updateOperator != null">
                #{updateOperator,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.maxcar.market.pojo.PropertyContractPayDetailExample"
            resultType="java.lang.Integer">
        select count(*) from property_contract_pay_detail
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update property_contract_pay_detail
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.marketId != null">
                market_id = #{record.marketId,jdbcType=VARCHAR},
            </if>
            <if test="record.propertyContractId != null">
                property_contract_id = #{record.propertyContractId,jdbcType=VARCHAR},
            </if>
            <if test="record.propertyContractDetail != null">
                property_contract_detail = #{record.propertyContractDetail,jdbcType=VARCHAR},
            </if>
            <if test="record.payTime != null">
                pay_time = #{record.payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.payPrice != null">
                pay_price = #{record.payPrice,jdbcType=INTEGER},
            </if>
            <if test="record.isvalid != null">
                isvalid = #{record.isvalid,jdbcType=INTEGER},
            </if>
            <if test="record.remark != null">
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
            <if test="record.insertTime != null">
                insert_time = #{record.insertTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.insertOperator != null">
                insert_operator = #{record.insertOperator,jdbcType=VARCHAR},
            </if>
            <if test="record.updateOperator != null">
                update_operator = #{record.updateOperator,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update property_contract_pay_detail
        set id = #{record.id,jdbcType=VARCHAR},
        market_id = #{record.marketId,jdbcType=VARCHAR},
        property_contract_id = #{record.propertyContractId,jdbcType=VARCHAR},
        property_contract_detail = #{record.propertyContractDetail,jdbcType=VARCHAR},
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
        status = #{record.status,jdbcType=INTEGER},
        pay_price = #{record.payPrice,jdbcType=INTEGER},
        isvalid = #{record.isvalid,jdbcType=INTEGER},
        remark = #{record.remark,jdbcType=VARCHAR},
        insert_time = #{record.insertTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        insert_operator = #{record.insertOperator,jdbcType=VARCHAR},
        update_operator = #{record.updateOperator,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.maxcar.market.pojo.PropertyContractPayDetail">
        update property_contract_pay_detail
        <set>
            <if test="marketId != null">
                market_id = #{marketId,jdbcType=VARCHAR},
            </if>
            <if test="propertyContractId != null">
                property_contract_id = #{propertyContractId,jdbcType=VARCHAR},
            </if>
            <if test="propertyContractDetail != null">
                property_contract_detail = #{propertyContractDetail,jdbcType=VARCHAR},
            </if>
            <if test="payTime != null">
                pay_time = #{payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="payPrice != null">
                pay_price = #{payPrice,jdbcType=INTEGER},
            </if>
            <if test="isvalid != null">
                isvalid = #{isvalid,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="insertTime != null">
                insert_time = #{insertTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="insertOperator != null">
                insert_operator = #{insertOperator,jdbcType=VARCHAR},
            </if>
            <if test="updateOperator != null">
                update_operator = #{updateOperator,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.maxcar.market.pojo.PropertyContractPayDetail">
    update property_contract_pay_detail
    set market_id = #{marketId,jdbcType=VARCHAR},
      property_contract_id = #{propertyContractId,jdbcType=VARCHAR},
      property_contract_detail = #{propertyContractDetail,jdbcType=VARCHAR},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      pay_price = #{payPrice,jdbcType=INTEGER},
      isvalid = #{isvalid,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      insert_time = #{insertTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      insert_operator = #{insertOperator,jdbcType=VARCHAR},
      update_operator = #{updateOperator,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>